# Superset Configuration File
# This file is automatically generated by Ansible

import os
from datetime import timedelta
from flask_appbuilder.const import AUTH_DB

# Database Configuration
SQLALCHEMY_DATABASE_URI = (
    f"postgresql://{os.environ.get('POSTGRES_USER', 'superset')}:"
    f"{os.environ.get('POSTGRES_PASSWORD', 'superset')}@"
    f"postgres:{os.environ.get('POSTGRES_PORT', '5432')}/"
    f"{os.environ.get('POSTGRES_DB', 'superset')}"
)

# Redis Configuration
REDIS_HOST = os.environ.get('REDIS_HOST', 'redis')
REDIS_PORT = os.environ.get('REDIS_PORT', '6379')

# Cache Configuration
CACHE_CONFIG = {
    'CACHE_TYPE': 'redis',
    'CACHE_DEFAULT_TIMEOUT': 300,
    'CACHE_KEY_PREFIX': 'superset_',
    'CACHE_REDIS_HOST': REDIS_HOST,
    'CACHE_REDIS_PORT': REDIS_PORT,
    'CACHE_REDIS_DB': 1,
    'CACHE_REDIS_URL': f'redis://{REDIS_HOST}:{REDIS_PORT}/1'
}

# Session Configuration
SESSION_CONFIG = {
    'SESSION_TYPE': 'redis',
    'SESSION_REDIS_HOST': REDIS_HOST,
    'SESSION_REDIS_PORT': REDIS_PORT,
    'SESSION_REDIS_DB': 2,
    'SESSION_REDIS_URL': f'redis://{REDIS_HOST}:{REDIS_PORT}/2'
}

# Security Configuration
SECRET_KEY = os.environ.get('SUPERSET_SECRET_KEY', 'your-secret-key-here')
WTF_CSRF_ENABLED = True
WTF_CSRF_TIME_LIMIT = None

# JWT Configuration for Async Queries
JWT_SECRET_KEY = os.environ.get('SUPERSET_SECRET_KEY', 'your-secret-key-here')

# Feature Flags
FEATURE_FLAGS = {
    'ENABLE_TEMPLATE_PROCESSING': True,
    'DASHBOARD_NATIVE_FILTERS': True,
    'DASHBOARD_CROSS_FILTERS': True,
    'DASHBOARD_RBAC': True,
    'ENABLE_EXPLORE_JSON_CSRF_PROTECTION': False,
    'ENABLE_EXPLORE_DRAG_AND_DROP': True,
    'GLOBAL_ASYNC_QUERIES': False,
    'VERSIONED_EXPORT': True,
    'DASHBOARD_FILTERS_EXPERIMENTAL': True,
}

# Authentication Configuration
AUTH_TYPE = AUTH_DB
AUTH_USER_REGISTRATION = False
AUTH_USER_REGISTRATION_ROLE = "Public"

# Flask-AppBuilder Configuration
FAB_ADD_SECURITY_VIEWS = True
FAB_ADD_SECURITY_PERMISSION_VIEW = True

# Email Configuration (optional)
# SMTP_HOST = 'localhost'
# SMTP_STARTTLS = True
# SMTP_SSL = False
# SMTP_USER = 'superset'
# SMTP_PORT = 25
# SMTP_PASSWORD = 'superset'
# SMTP_MAIL_FROM = 'superset@superset.com'

# Logging Configuration
LOG_LEVEL = '{{ log_level }}'
LOG_FORMAT = '%(asctime)s:%(levelname)s:%(name)s:%(message)s'

# Timezone Configuration
DEFAULT_TIMEZONE = 'UTC'

# Row Limit Configuration
ROW_LIMIT = 50000
VIZ_ROW_LIMIT = 10000

# Webdriver Configuration
WEBDRIVER_BASEURL = "http://superset:8088/"
WEBDRIVER_BASEURL_USER_FRIENDLY = WEBDRIVER_BASEURL

# Celery Configuration (for async tasks)
class CeleryConfig:
    broker_url = f'redis://{REDIS_HOST}:{REDIS_PORT}/0'
    imports = ('superset.sql_lab', 'superset.tasks')
    result_backend = f'redis://{REDIS_HOST}:{REDIS_PORT}/0'
    worker_prefetch_multiplier = 1
    task_acks_late = False
    task_annotations = {
        'sql_lab.get_sql_results': {
            'rate_limit': '10/s'
        },
        'email_reports.send': {
            'rate_limit': '1/s',
            'time_limit': 120,
            'soft_time_limit': 150,
            'ignore_result': True,
        }
    }

CELERY_CONFIG = CeleryConfig

# Async Query Configuration
GLOBAL_ASYNC_QUERIES_REDIS_CONFIG = {
    'host': REDIS_HOST,
    'port': REDIS_PORT,
    'db': 3,
    'password': None,
}

# Database Engine Configuration
PREVENT_UNSAFE_DB_CONNECTIONS = False

# CORS Configuration
ENABLE_CORS = True
CORS_OPTIONS = {
    'supports_credentials': True,
    'allow_headers': ['*'],
    'resources': ['*'],
    'origins': ['*']
}

# Security Headers
ENABLE_PROXY_FIX = True
PROXY_FIX_CONFIG = {
    "x_for": 1,
    "x_proto": 1,
    "x_host": 1,
    "x_port": 1,
    "x_prefix": 1,
}

# Custom CSS/JS (optional)
# CUSTOM_CSS = """
# .navbar-brand {
#     background-image: url('/static/assets/images/superset-logo-horiz.png');
#     background-repeat: no-repeat;
#     background-size: contain;
#     width: 200px;
# }
# """

# Custom JavaScript (optional)
# CUSTOM_JS = """
# console.log('Custom JavaScript loaded');
# """

# Database Connection Timeout
SQL_MAX_ROW = 100000
SQL_QUERY_CACHE_TIMEOUT = 86400

# Dashboard Auto-refresh
DASHBOARD_AUTO_REFRESH_MODE = "fetch"
DASHBOARD_AUTO_REFRESH_INTERVALS = [
    [0, "Don't refresh"],
    [10, "10 seconds"],
    [30, "30 seconds"],
    [60, "1 minute"],
    [300, "5 minutes"],
    [1800, "30 minutes"],
    [3600, "1 hour"],
]

# Export Configuration
EXPORT_FORMATS = ['csv', 'xlsx', 'json']
CSV_EXPORT = {
    'encoding': 'utf-8',
}

# Thumbnail Configuration
THUMBNAIL_SELENIUM_USER = 'admin'
THUMBNAIL_CACHE_CONFIG = {
    'CACHE_TYPE': 'redis',
    'CACHE_DEFAULT_TIMEOUT': 300,
    'CACHE_KEY_PREFIX': 'superset_thumbnails_',
    'CACHE_REDIS_HOST': REDIS_HOST,
    'CACHE_REDIS_PORT': REDIS_PORT,
    'CACHE_REDIS_DB': 4,
    'CACHE_REDIS_URL': f'redis://{REDIS_HOST}:{REDIS_PORT}/4'
}

# Alerts and Reports Configuration
ALERT_REPORTS_NOTIFICATION_DRY_RUN = True
WEBDRIVER_BASEURL_USER_FRIENDLY = "http://localhost:8088"

# Custom Security Manager (optional)
# from superset.security import SupersetSecurityManager
# class CustomSecurityManager(SupersetSecurityManager):
#     pass
# CUSTOM_SECURITY_MANAGER = CustomSecurityManager

# Custom Query Engine (optional)
# CUSTOM_QUERY_ENGINES = {
#     'my_engine': 'path.to.custom.engine'
# }

# Custom Metrics (optional)
# CUSTOM_METRICS = {
#     'my_metric': 'path.to.custom.metric'
# }

# Custom Visualization Plugins (optional)
# CUSTOM_VISUALIZATIONS = {
#     'my_viz': 'path.to.custom.viz'
# } 